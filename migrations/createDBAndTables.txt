// Create DB
CREATE DATABASE vino;
CREATE USER vino WITH ENCRYPTED PASSWORD 'vino'; 
GRANT ALL PRIVILEGES ON DATABASE vino TO vino;

// --- Creating tables ---

// Payment preferences table
CREATE TABLE payment_preferences (
payment_preferences_id int GENERATED ALWAYS AS IDENTITY,
payment_preferences_name varchar(30),
PRIMARY KEY(payment_preferences_id));

// Delivery options table
CREATE TABLE delivery_options (
delivery_options_id int GENERATED ALWAYS AS IDENTITY,
delivery_options_name varchar(30),
PRIMARY KEY(delivery_options_id));

// Create customer table 
CREATE TABLE customers (
customer_id int GENERATED ALWAYS AS IDENTITY,
first_name varchar(40),
last_name varchar(40),
email text,
address_street varchar(50),
address_street_nr varchar(10),
address_county varchar(50),
address_city varchar(50),
address_zip varchar(10),
address_country varchar(50),
admin boolean,
user_name varchar(40),
PRIMARY KEY(customer_id),
delivery_option int,
payment_preference int,
CONSTRAINT fk_delivery_option_id
	FOREIGN KEY(delivery_option)
		REFERENCES delivery_options(delivery_options_id),
CONSTRAINT fk_payment_preferences_id
	FOREIGN KEY(payment_preference)
		REFERENCES payment_preferences(payment_preferences_id));

// Create products table
CREATE TABLE products (
product_id int GENERATED ALWAYS AS IDENTITY,
product_name varchar(50),
production_year numeric(4,0),
price_per_unit decimal(12,2),
product_description text,
producer varchar(40),
inventory int,
deleted boolean,
PRIMARY KEY(product_id));

// CREATE shopping_cart table
CREATE TABLE shopping_cart (
customer_id int,
product_id int,
quantity int,
PRIMARY KEY(customer_id),
CONSTRAINT fk_customer_id
	FOREIGN KEY(customer_id)
		REFERENCES customers,
CONSTRAINT fk_product_id
	FOREIGN KEY(product_id)
		REFERENCES products
);

// CREATE images table
CREATE TABLE images (
image_id int GENERATED ALWAYS AS IDENTITY,
image_data bytea,
PRIMARY KEY(image_id));
 
// CREATE products_images table
CREATE TABLE products_images (
image_id int,
product_id int,
CONSTRAINT fk_image_id
	FOREIGN KE Y(image_id)
		REFERENCES images
);

// CREATE customer_order table
CREATE TABLE customer_order (
customer_id int,
delivery_option_id int,
payment_preference_id int,
order_date date,
sum decimal(12,2),
CONSTRAINT fk_customer_id
	FOREIGN KEY(customer_id)
		REFERENCES customers,
CONSTRAINT fk_delivery_option_id
	FOREIGN KEY(delivery_option_id)
		REFERENCES delivery_options,
CONSTRAINT fk_payment_preference_id
	FOREIGN KEY(payment_preference_id)
		REFERENCES payment_preferences
);

// CREATE customer_order_products
CREATE TABLE customer_order_products (
customer_order_id int,
product_id int,
quantity int,
CONSTRAINT fk_customer_order_id
	FOREIGN KEY(customer_order_id)
		REFERENCES customer_orders,
CONSTRAINT fk_product_id
	FOREIGN KEY(product_id)
		REFERENCES products
);




